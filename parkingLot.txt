Requirements gathering-
  1-Parking lot has 10-20k parking spots.
  2-Parking spot can be of 3 sizes.
  3-Multiple entry/exit terminals.
  4-Parking ticket will be issues at the entry.
  5-Parking charges will be based on time.
  6-Nearest parking spot is assigned.
  7-Payment can be done via cash/credit cards.

Classes-

class ParkingLotSystem{
    list<Parkingspot*> listofParkingSpots;
    list<Terminals*> listofTerminals;
    set<Parkingspot*> available;
    set<Parkkingspot*> reserve;
    map<int,priority_queue> mapOfMinHeaps; //number of heaps will be 3(types of parking)*4(terminals)
    
  
}

enum Parkingtypes{Motorcycle,Cars,BigVehicles};

class Parkingspot{
  int x;
  int y;
  id:int;
  type:enum;
  reserve:bool;

}
class Ticket{
    id:int;
    entrytime:datetime;
    exittime:datetime;
    totalcharge:int;
    vehicleNo:string;
    parkingspotId:int;
    parkingspotType:enum;
}
Class teminal{
  int x;
  int y;
  int id;
  getId();
}
class entryterminal:public terminal{
      getTicket(vehicleNo,parkingspotType);
}
class exitterminal:public terminal{
      acceptTicket(ticketId);
}
class Payment{

}
class CashPayment:public payment{

}
class CreditPayment:public payment{

}
